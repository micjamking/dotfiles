# Shell prompt based on the Monokai theme.
# Based on @mathiasbynens - https://github.com/mathiasbynens/dotfiles/blob/master/.bash_prompt

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
	export TERM='gnome-256color';
elif infocmp xterm-256color >/dev/null 2>&1; then
	export TERM='xterm-256color';
fi;

prompt_git() {
	
  local branchName='';

	# Check if the current directory is in a Git repository.
	if [ $(git rev-parse --is-inside-work-tree &>/dev/null; echo "${?}") == '0' ]; then

		# check if the current directory is in .git before running git checks
		if [ "$(git rev-parse --is-inside-git-dir 2> /dev/null)" == 'false' ]; then

			# Ensure the index is up to date.
			git update-index --really-refresh -q &>/dev/null;

		fi;

		# Get the short symbolic ref.
		# If HEAD isn’t a symbolic ref, get the short SHA for the latest commit
		# Otherwise, just give up.
		branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
			git rev-parse --short HEAD 2> /dev/null || \
			echo '(unknown)')";

		echo -e "${1}${branchName}${2}";
	
  else
	
  	return;
	
  fi;
}

if tput setaf 1 &> /dev/null; then
	tput sgr0;
	bold=$(tput bold);
	reset=$(tput sgr0);
	# Monokai colorscheme
	black=$(tput setaf 00);
	blue=$(tput setaf 81);
	cyan=$(tput setaf 37);
	green=$(tput setaf 148);
	orange=$(tput setaf 208);
	purple=$(tput setaf 141);
	red=$(tput setaf 197);
	violet=$(tput setaf 61);
	white=$(tput setaf 15);
	yellow=$(tput setaf 185);
else
	bold='';
	reset="\e[0m";
	black="\e[1;30m";
	blue="\e[1;34m";
	cyan="\e[1;36m";
	green="\e[1;32m";
	orange="\e[1;33m";
	purple="\e[1;35m";
	red="\e[1;31m";
	violet="\e[1;35m";
	white="\e[1;37m";
	yellow="\e[1;33m";
fi;

# Set the terminal title to the current working directory.
PS1="\[\033]0;\w\007\]";

# Username
PS1+="\[${bold}${red}\]\u";

# Hostname (if connected via SSH)
if [[ "${SSH_TTY}" ]]; then
  PS1+="\[${white}\] at ";
  PS1+="\[${bold}${orange}\]\h";
fi;

# Directory
PS1+="\[${white}\] in \[${orange}\]\w";

# Git Branch
PS1+="\$(prompt_git \"\[${white}\] on \[${green}\]\") ";

# Cursor
PS1+="\[${white}\]\$ \[${reset}\]";

export PS1;

PS2="\[${yellow}\]→ \[${reset}\]";

export PS2;
